// <auto-generated />
using System;
using Eindwerk__Gegevensbeheer__en_C_sharp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Eindwerk__Gegevensbeheer__en_C_sharp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230601004135_added reparatie table")]
    partial class addedreparatietable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Eindwerk__Gegevensbeheer__en_C_sharp.Models.Auto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Bouwjaar")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Merk")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Prijs")
                        .HasColumnType("REAL");

                    b.Property<int>("Voorraad")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Autos");
                });

            modelBuilder.Entity("Eindwerk__Gegevensbeheer__en_C_sharp.Models.BestellingM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Aantal")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("KlantId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LeverancierId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OnderdeelId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("TotaalPrijs")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("AutoId");

                    b.HasIndex("KlantId");

                    b.HasIndex("LeverancierId");

                    b.HasIndex("OnderdeelId");

                    b.ToTable("Bestellingen");
                });

            modelBuilder.Entity("Eindwerk__Gegevensbeheer__en_C_sharp.Models.Klant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Email")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("IVEmail")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("IVTelefoonNummer")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("TelefoonNummer")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Klanten");
                });

            modelBuilder.Entity("Eindwerk__Gegevensbeheer__en_C_sharp.Models.Leverancier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefoonNummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Leveranciers");
                });

            modelBuilder.Entity("Eindwerk__Gegevensbeheer__en_C_sharp.Models.Mecanicien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefoonNummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Mecaniciens");
                });

            modelBuilder.Entity("Eindwerk__Gegevensbeheer__en_C_sharp.Models.Onderdeel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Prijs")
                        .HasColumnType("REAL");

                    b.Property<int>("Voorraad")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Onderdelen");
                });

            modelBuilder.Entity("Eindwerk__Gegevensbeheer__en_C_sharp.Models.Reparatie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<int?>("KlantId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MecanicienId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Raming")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Soort")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KlantId");

                    b.HasIndex("MecanicienId");

                    b.ToTable("Reparaties");
                });

            modelBuilder.Entity("Eindwerk__Gegevensbeheer__en_C_sharp.Models.User", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Gebruikersnaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Wachtwoord")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Eindwerk__Gegevensbeheer__en_C_sharp.Models.BestellingM", b =>
                {
                    b.HasOne("Eindwerk__Gegevensbeheer__en_C_sharp.Models.Auto", "Auto")
                        .WithMany()
                        .HasForeignKey("AutoId");

                    b.HasOne("Eindwerk__Gegevensbeheer__en_C_sharp.Models.Klant", "Klant")
                        .WithMany("Bestelling")
                        .HasForeignKey("KlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eindwerk__Gegevensbeheer__en_C_sharp.Models.Leverancier", "Leverancier")
                        .WithMany()
                        .HasForeignKey("LeverancierId");

                    b.HasOne("Eindwerk__Gegevensbeheer__en_C_sharp.Models.Onderdeel", "Onderdeel")
                        .WithMany()
                        .HasForeignKey("OnderdeelId");

                    b.Navigation("Auto");

                    b.Navigation("Klant");

                    b.Navigation("Leverancier");

                    b.Navigation("Onderdeel");
                });

            modelBuilder.Entity("Eindwerk__Gegevensbeheer__en_C_sharp.Models.Reparatie", b =>
                {
                    b.HasOne("Eindwerk__Gegevensbeheer__en_C_sharp.Models.Klant", "Klant")
                        .WithMany("Reparatie")
                        .HasForeignKey("KlantId");

                    b.HasOne("Eindwerk__Gegevensbeheer__en_C_sharp.Models.Mecanicien", "Mecanicien")
                        .WithMany("Reparatie")
                        .HasForeignKey("MecanicienId");

                    b.Navigation("Klant");

                    b.Navigation("Mecanicien");
                });

            modelBuilder.Entity("Eindwerk__Gegevensbeheer__en_C_sharp.Models.Klant", b =>
                {
                    b.Navigation("Bestelling");

                    b.Navigation("Reparatie");
                });

            modelBuilder.Entity("Eindwerk__Gegevensbeheer__en_C_sharp.Models.Mecanicien", b =>
                {
                    b.Navigation("Reparatie");
                });
#pragma warning restore 612, 618
        }
    }
}
